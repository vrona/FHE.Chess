import numpy as np
import torch
# pawn_table = np.array([
#     [0, 0, 0, 0, 0, 0, 0, 0],
#     [98, 134, 61, 95, 68, 126, 34, -11],
#     [-6, 7, 26, 31, 65, 56, 25, -20],
#     [-14, 13, 6, 21, 23, 12, 17, -23],
#     [-27, -2, -5, 12, 17, 6, 10, -25],
#     [-26, -4, -4, -10, 3, 3, 33, -12],
#     [-35, -1, -20, -23, -15, 24, 38, -22],
#     [0, 0, 0, 0, 0, 0, 0, 0]
# ])

# tops = np.argpartition(pawn_table, kth=1, axis=1)
# #topuno = tops[tops]
# print(tops)

unk = torch.tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.2200, 0.2265, 0.0517, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.3863, 0.2416, 0.5671, 0.0360,
         0.3388, 0.0000, 0.0000, 1.1331, 1.2365, 1.8491, 1.1675, 1.3209, 0.9775,
         0.9306, 0.0000, 1.0282, 2.2971, 0.8086, 0.5646, 0.4126, 0.9210, 0.3784,
         0.1660]])

print(type(unk) , unk.shape, torch.sum(unk,1))

